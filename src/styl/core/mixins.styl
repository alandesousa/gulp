
// transition() 
// transform() 
// ellipsis() 
// content()
// triangulo()
// box-shadow(args...)
// border-radius()
// opacity()
// +placeholder()
//   color #ccc




//
// Media Queries
// --------------------------------------------------


//@media (min-width $screen-sm)
//$screen-xs   = 480px // Extra small screen
$screen-sm   = 768px // Small screen
$screen-md   = 992px // Medium screen
$screen-lg   = 1200px // Large screen
//$screen-xlg  = 1600px // Extra Large screen
//$screen-xxlg = 1900px // Extra Large screen

//$screen-xs-max  = ($screen-sm - 1)
$screen-sm-max  = ($screen-md - 1)
$screen-md-max  = ($screen-lg - 1)
$screen-lg-max  = ($screen-xlg - 1)
//$screen-xlg-max = ($screen-xxlg - 1)





//
// mixins
// --------------------------------------------------

transition() 
  -webkit-transition arguments
  -moz-transition arguments
  -ms-transition arguments
  transition arguments

transform()  
  -webkit-transform arguments
  -moz-transform arguments
  -ms-transform arguments
  transform arguments


ellipsis() 
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;

content()
  content ""
  position absolute
  left 0
  right 0

triangulo()
  content ""
  position absolute
  left 0
  right 0
  bottom -5px
  z-index 10
  margin 0 auto
  width 0
  height 0
  border-style solid
  border-width 4px 4px 0 4px
  border-color #707170 transparent transparent transparent

box-shadow(args...)
  -webkit-box-shadow args
  -moz-box-shadow args
  box-shadow args

border-radius(n)
  -webkit-border-radius n
  -moz-border-radius n
  border-radius n
  

  // +placeholder()
  //   color #ccc
placeholder()
  &::-webkit-input-placeholder
    {block}
  &:-moz-placeholder
    {block}
  &::-moz-placeholder
    {block}
  &:-ms-input-placeholder
    {block}
    
    
opacity(n)
  -khtml-opacity n
  -moz-opacity n
  opacity n
  if support-for-ie
    -ms-filter unquote('"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + round(n * 100) + ')"')
    filter unquote('alpha(opacity=' + round(n * 100) + ')')
      

// font-size(value) {  
//     font-size: value; 

//     if (value is inherit) {
//         /* do nothing, "inherit" has no unit */
//     } else {
//         font-size: remify(value);
//     }
// }

// remify(value) { /* separate mixin, so it can be used elsewhere */  
//     u = unit(value);

//     if (u is 'px') {
//         return unit(value/16, 'rem');
//     } else {
//         return unit(value, u);
//     }
// }